name: deploy

# Визначимо подію, яка запустить виконання workflow процесу.
on:
    push:
      branches:
        - develop

# блок задач який налаштовано на запуск завдання на новій ВМ з останньою версією ubuntu
jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
# перший крок задачі дозволить запускати на ранері репозиторій із скриптами для виконання дії. 
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with: 
          fetch-depth: 0

          # наступним кроком запустимо команду make build, зробимо коміт та подивимось як це працює
      - name: Build the project
        run: make build

      - name: Create the image
        run: make image

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}
      
      - name: Push the image to repository
        run: make push

  cd:
    name: CD
    runs-on: ubuntu-latest
    needs: ci

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with: 
          fetch-depth: 0
    - run: echo "VERSION=$(git describe --tags --abbrev=0)-$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Updating values.yaml
      uses: mikefarah/yq@master
      with:
        cmd: yq -i '.image.tag=strenv(VERSION)' helm/values.yaml
    - run: |
        git config user.name github-actions
        git config user.email github-actions@github.com

    - uses: rinx/setup-k3d@v0.0.2
    - name: Get cluster info
      run: |
            kubectl cluster-info
            kubectl get pods -n kube-system
            kubectl get nodes
            echo "current-context:" $(kubectl config current-context)

    - name: Installing and running ArgoCD
      run:  |
        kubectl create namespace argocd
        kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
        kubectl port-forward svc/argocd-server -n argocd 8080:443&


  

    

    
      

      
      